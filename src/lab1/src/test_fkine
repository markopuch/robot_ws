#!/usr/bin/env python
import rospy
from sensor_msgs.msg import JointState

from markers import *
from functions import *

rospy.init_node("jointsNode")
pub = rospy.Publisher('joint_states', JointState, queue_size=1)
bmarker = BallMarker(color['GREEN'])

# Joint names
jnames = ("joint1", "joint2", "joint3",
          "joint4_new", "joint4", "joint5", "joint6")
# Joint Configuration
q = [0, 0, 0, 0, 0, 0, 0]
q = [-0.92, -0.91, 0.88, 0.44, -1.01, 4.12, 4.31]
# q = [2.62, pi/3, 2.4, 0.1, pi/4, 1.57, 3.14]
# q = [0.6, -0.4, 0.6, 0.18, 0.2, 0.6, 0]

# End effector with respect to the base
T = fkine_irb(q)
print(np.round(T, 3))
bmarker.position(T)

# Object (message) whose type is JointState
jstate = JointState()
# Set values to the message
jstate.header.stamp = rospy.Time.now()
jstate.name = jnames
# Add the head joint value (with value 0) to the joints
jstate.position = q

# Loop rate (in Hz)
rate = rospy.Rate(20)
# Continuous execution loop
while not rospy.is_shutdown():
    # Current time (needed for ROS)
    jstate.header.stamp = rospy.Time.now()
    # Publish the message
    pub.publish(jstate)
    bmarker.publish()
    # Wait for the next iteration
    rate.sleep()
